//
//  ListOrdersConfigurator.swift
//  CleanStore
//
//  Created by Raymond Law on 10/31/15.
//  Copyright (c) 2015 Raymond Law. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: Connect View, Interactor, and Presenter

extension ListOrdersViewController: ListOrdersPresenterOutput
{
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    router.passDataToNextScene(segue)
  }
}

extension ListOrdersInteractor: ListOrdersViewControllerOutput
{
}

extension ListOrdersPresenter: ListOrdersInteractorOutput
{
}

class ListOrdersConfigurator
{
  // MARK: Object lifecycle

  static let shared = ListOrdersConfigurator()
  private init() {} //This prevents others from using the default '()' initializer for this class.
  
  // MARK: Configuration
  
  func configure(_ viewController: ListOrdersViewController)
  {
    let router = ListOrdersRouter()
    router.viewController = viewController
    
    let presenter = ListOrdersPresenter()
    presenter.output = viewController
    
    let interactor = ListOrdersInteractor()
    interactor.output = presenter
    
    viewController.output = interactor
    viewController.router = router
  }
}
