//
//  CreateOrderViewController.swift
//  CleanStore
//
//  Created by Raymond Law on 8/22/15.
//  Copyright (c) 2015 Raymond Law. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol CreateOrderViewControllerInput
{
  func displayExpirationDate(_ viewModel: CreateOrder.FormatExpirationDate.ViewModel)
}

protocol CreateOrderViewControllerOutput
{
  var shippingMethods: [String] { get }
  func formatExpirationDate(_ request: CreateOrder.FormatExpirationDate.Request)
}

class CreateOrderViewController: UITableViewController, CreateOrderViewControllerInput, UITextFieldDelegate, UIPickerViewDataSource, UIPickerViewDelegate
{
  var output: CreateOrderViewControllerOutput!
  var router: CreateOrderRouter!
  
  // MARK: Object lifecycle
  
  override func awakeFromNib()
  {
    super.awakeFromNib()
    CreateOrderConfigurator.shared.configure(self)
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    configurePickers()
  }
  
  // MARK: Text fields
  
  @IBOutlet var textFields: [UITextField]!
  
  func textFieldShouldReturn(_ textField: UITextField) -> Bool
  {
    textField.resignFirstResponder()
    if let index = textFields.index(of: textField) {
      if index < textFields.count - 1 {
        let nextTextField = textFields[index + 1]
        nextTextField.becomeFirstResponder()
      }
    }
    return true
  }
  
  override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath)
  {
    if let cell = tableView.cellForRow(at: indexPath) {
      for textField in textFields {
        if textField.isDescendant(of: cell) {
          textField.becomeFirstResponder()
        }
      }
    }
  }
  
  // MARK: Shipping method
  
  @IBOutlet weak var shippingMethodTextField: UITextField!
  @IBOutlet var shippingMethodPicker: UIPickerView!
  
  func configurePickers()
  {
    shippingMethodTextField.inputView = shippingMethodPicker
    expirationDateTextField.inputView = expirationDatePicker
  }
  
  func numberOfComponents(in pickerView: UIPickerView) -> Int
  {
    return 1
  }
  
  func pickerView(_ pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int
  {
    return output.shippingMethods.count
  }
  
  func pickerView(_ pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String?
  {
    return output.shippingMethods[row]
  }
  
  func pickerView(_ pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int)
  {
    shippingMethodTextField.text = output.shippingMethods[row]
  }
  
  // MARK: Expiration date
  
  @IBOutlet weak var expirationDateTextField: UITextField!
  @IBOutlet var expirationDatePicker: UIDatePicker!
  
  @IBAction func expirationDatePickerValueChanged(_ sender: AnyObject)
  {
    let date = expirationDatePicker.date
    let request = CreateOrder.FormatExpirationDate.Request(date: date)
    output.formatExpirationDate(request)
  }
  
  func displayExpirationDate(_ viewModel: CreateOrder.FormatExpirationDate.ViewModel)
  {
    let date = viewModel.date
    expirationDateTextField.text = date
  }
}
