//
//  ListOrdersPresenterTests.swift
//  CleanStore
//
//  Created by Raymond Law on 10/31/15.
//  Copyright (c) 2015 Raymond Law. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import CleanStore
import XCTest

class ListOrdersPresenterTests: XCTestCase
{
  // MARK: - Subject under test
  
  var sut: ListOrdersPresenter!
  
  // MARK: - Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupListOrdersPresenter()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: - Test setup
  
  func setupListOrdersPresenter()
  {
    sut = ListOrdersPresenter()
  }
  
  // MARK: - Test doubles
  
  class ListOrdersDisplayLogicSpy: ListOrdersDisplayLogic
  {
    // MARK: Method call expectations
    
    var displayFetchedOrdersCalled = false
    
    // MARK: Argument expectations
    
    var viewModel: ListOrders.FetchOrders.ViewModel!
    
    // MARK: Spied methods
    
    func displayFetchedOrders(viewModel: ListOrders.FetchOrders.ViewModel)
    {
      displayFetchedOrdersCalled = true
      self.viewModel = viewModel
    }
  }
  
  // MARK: - Tests
  
  func testPresentFetchedOrdersShouldFormatFetchedOrdersForDisplay()
  {
    // Given
    let listOrdersDisplayLogicSpy = ListOrdersDisplayLogicSpy()
    sut.viewController = listOrdersDisplayLogicSpy
    
    var dateComponents = DateComponents()
    dateComponents.year = 2007
    dateComponents.month = 6
    dateComponents.day = 29
    let date = Calendar.current.date(from: dateComponents)!
    
    var amy = Seeds.Orders.amy
    amy.date = date
    let orders = [amy]
    
    let response = ListOrders.FetchOrders.Response(orders: orders)
    
    // When
    sut.presentFetchedOrders(response: response)
    
    // Then
    let displayedOrders = listOrdersDisplayLogicSpy.viewModel.displayedOrders
    for displayedOrder in displayedOrders{
      XCTAssertEqual(displayedOrder.id, "aaa111", "Presenting fetched orders should properly format order ID")
      XCTAssertEqual(displayedOrder.date, "6/29/07", "Presenting fetched orders should properly format order date")
      XCTAssertEqual(displayedOrder.email, "amy.apple@clean-swift.com", "Presenting fetched orders should properly format email")
      XCTAssertEqual(displayedOrder.name, "Amy Apple", "Presenting fetched orders should properly format name")
      XCTAssertEqual(displayedOrder.total, "$1.11", "Presenting fetched orders should properly format total")
    }
  }
  
  func testPresentFetchedOrdersShouldAskViewControllerToDisplayFetchedOrders()
  {
    // Given
    let listOrdersDisplayLogicSpy = ListOrdersDisplayLogicSpy()
    sut.viewController = listOrdersDisplayLogicSpy
    
    let orders = [Seeds.Orders.amy]
    let response = ListOrders.FetchOrders.Response(orders: orders)
    
    // When
    sut.presentFetchedOrders(response: response)
    
    // Then
    XCTAssert(listOrdersDisplayLogicSpy.displayFetchedOrdersCalled, "Presenting fetched orders should ask view controller to display them")
  }
    
  func testDateSimpleFormat() {
    let dateToTest = Date(timeIntervalSince1970: 0)
    XCTAssertEqual(dateToTest.simpleFormat(), "12/31/69")
  }
    
}
