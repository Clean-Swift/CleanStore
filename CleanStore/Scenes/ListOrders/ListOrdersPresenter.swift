//
//  ListOrdersPresenter.swift
//  CleanStore
//
//  Created by Raymond Law on 10/31/15.
//  Copyright (c) 2015 Raymond Law. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol ListOrdersPresenterInput
{
  func presentFetchedOrders(_ response: ListOrders.FetchOrders.Response)
}

protocol ListOrdersPresenterOutput: class
{
  func displayFetchedOrders(_ viewModel: ListOrders.FetchOrders.ViewModel)
}

class ListOrdersPresenter: ListOrdersPresenterInput
{
  weak var output: ListOrdersPresenterOutput!
  let dateFormatter: DateFormatter = {
    let dateFormatter = DateFormatter()
    dateFormatter.dateStyle = .short
    dateFormatter.timeStyle = DateFormatter.Style.none
    return dateFormatter
  }()
  let currencyFormatter: NumberFormatter = {
    let currencyFormatter = NumberFormatter()
    currencyFormatter.numberStyle = .currency
    return currencyFormatter
  }()
  
  // MARK: Presentation logic
  
  func presentFetchedOrders(_ response: ListOrders.FetchOrders.Response)
  {
    var displayedOrders: [ListOrders.FetchOrders.ViewModel.DisplayedOrder] = []
    for order in response.orders {
      let date = dateFormatter.string(from: order.date! as Date)
      let total = currencyFormatter.string(from: order.total!)
      let displayedOrder = ListOrders.FetchOrders.ViewModel.DisplayedOrder(id: order.id!, date: date, email: order.email!, name: "\(order.firstName!) \(order.lastName!)", total: total!)
      displayedOrders.append(displayedOrder)
    }
    let viewModel = ListOrders.FetchOrders.ViewModel(displayedOrders: displayedOrders)
    output.displayFetchedOrders(viewModel)
  }
}
